% Auto-generated by stereoCalibrator app on 22-Sep-2016
%-------------------------------------------------------


% Define images to process
imageFileNames1 = {'Left Images/1.jpg',...
  'Left Images/10.jpg',...
  'Left Images/11.jpg',...
  'Left Images/12.jpg',...
  'Left Images/13.jpg',...
  'Left Images/14.jpg',...
  'Left Images/15.jpg',...
  'Left Images/2.jpg',...
  'Left Images/3.jpg',...
  'Left Images/4.jpg',...
  'Left Images/6.jpg',...
  'Left Images/7.jpg',...
  'Left Images/8.jpg',...
  };
imageFileNames2 = {'Right images/1.jpg',...
  'Right images/10.jpg',...
  'Right images/11.jpg',...
  'Right images/12.jpg',...
  'Right images/13.jpg',...
  'Right images/14.jpg',...
  'Right images/15.jpg',...
  'Right images/2.jpg',...
  'Right images/3.jpg',...
  'Right images/4.jpg',...
  'Right images/6.jpg',...
  'Right images/7.jpg',...
  'Right images/8.jpg',...
  };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames1, imageFileNames2);

% Generate world coordinates of the checkerboard keypoints
squareSize = 25;  % in units of 'mm'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[stereoParams, pairsUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
  'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
  'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'mm');

% View reprojection errors
h1=figure; showReprojectionErrors(stereoParams, 'BarGraph');

% Visualize pattern locations
h2=figure; showExtrinsics(stereoParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, stereoParams);

% You can use the calibration data to rectify stereo images.
I1 = imread(imageFileNames1{1});
I2 = imread(imageFileNames2{1});
[J1, J2] = rectifyStereoImages(I1, I2, stereoParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('StereoCalibrationAndSceneReconstructionExample')


% ------------- FRED BELOW --------------

% Interrogate a corresponding point in both views
iml = imread('Left Images/1.jpg');  imr = imread('Right Images/1.jpg');
cp1 = stereoParams.CameraParameters1;  cp2 = stereoParams.CameraParameters2;  
[imlu,neworiginl] = undistortImage(iml, cp1);  [imru,neworiginr] = undistortImage(imr, cp2);
xpl = cp1.ReprojectedPoints(1,:,1);  xpr = cp2.ReprojectedPoints(1,:,1);  
xplu = undistortPoints(xpl, cp1);  xpru = undistortPoints(xpr, cp2);
figure;  
subplot(2,2,1);  image(iml);  hold on;  scatter(xpl(1),xpl(2),'ro');  hold off;  title('Distorted left');
subplot(2,2,2);  image(imr);  hold on;  scatter(xpr(1),xpr(2),'ro');  hold off;  title('Distorted right');
subplot(2,2,3);  image(imlu);  hold on;  scatter(xplu(1),xplu(2),'ro');  hold off;  title('Undistorted left');
subplot(2,2,4);  image(imru);  hold on;  scatter(xpru(1),xpru(2),'ro');  hold off;  title('Undistorted right');

% Investigate first image and first camera
Wp = [cp1.WorldPoints'; zeros(1,size(cp1.WorldPoints,1))];  
K1 = cp1.IntrinsicMatrix';  R1 = cp1.RotationMatrices(:,:,1)';  t1 = cp1.TranslationVectors(1,:)';
rp1 = cp1.ReprojectedPoints(:,:,1)';  rp1u = undistortPoints(rp1', cp1)';
P1w = K1*[R1 t1];  xph = P1w*[Wp; ones(1,size(Wp,2))];  xp = xph(1:2,:)./repmat(xph(3,:),2,1);
disp(sprintf('Max diff=%g',max(abs(rp1u(:)-xp(:)))));

% Camera matrices
P1 = [stereoParams.CameraParameters1.IntrinsicMatrix' [0;0;0]];  % reference camera: R=I, t=0
Rt2 = [stereoParams.RotationOfCamera2' stereoParams.TranslationOfCamera2'];
P2 = stereoParams.CameraParameters2.IntrinsicMatrix'*Rt2;

% Triangulation and reprojection
rp1 = imagePoints(:,:,1,1)';
rp2 = imagePoints(:,:,1,2)';
rp1u = undistortPoints(rp1', cp1)';  rp2u = undistortPoints(rp2', cp2)';
Xp = triangulate(rp1u', rp2u', P1', P2')';
rp1urh = P1*[Xp; ones(1,size(Xp,2))];  rp1ur = rp1urh(1:2,:)./repmat(rp1urh(3,:),2,1);
rp2urh = P2*[Xp; ones(1,size(Xp,2))];  rp2ur = rp2urh(1:2,:)./repmat(rp2urh(3,:),2,1);
fh = figure;  
subplot(2,2,1);  image(iml);  hold on;  scatter(rp1(1,:),rp1(2,:),'g.');  hold off;  title('Distorted left');
subplot(2,2,2);  image(imr);  hold on;  scatter(rp2(1,:),rp2(2,:),'g.');  hold off;  title('Distorted right');
subplot(2,2,3);  image(imlu);  hold on;  scatter(rp1u(1,:),rp1u(2,:),'g.');  scatter(rp1ur(1,:),rp1ur(2,:),'ro');  hold off;  title('Undistorted left');
subplot(2,2,4);  image(imru);  hold on;  scatter(rp2u(1,:),rp2u(2,:),'g.');  scatter(rp2ur(1,:),rp2ur(2,:),'ro');  hold off;  title('Undistorted right');